% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/choose_best_collapse_state.R
\name{choose_best_collapse_state}
\alias{choose_best_collapse_state}
\title{Choose and load best model state from agglomerative collapsing algorithm}
\usage{
choose_best_collapse_state(
  sbm,
  use_entropy_value_for_score = FALSE,
  heuristic = "dev_from_rolling_mean",
  verbose = FALSE
)
}
\arguments{
\item{sbm}{\code{sbm_network} object as created by
\code{\link{new_sbm_network()}}.}

\item{use_entropy_value_for_score}{If set to \code{TRUE} then instead of the merge
results entropy delta being used for the score function the entropy will
be. Typically the heuristics work better on entropy delta values.}

\item{heuristic}{How the best partitioning is defined. Takes either a
function that takes one/two arguments: an entropy vector and an optional
number of blocks vector with each element corresponding to a given
location, or a string labeling algorithm. Currently only \code{"lowest"},
\code{"dev_from_rolling_mean"}, \code{"delta_ratio"}, \code{"trend_deviation"}, and \code{"nls_residual"} are supported.}

\item{verbose}{Should model tell you what step was chosen (\code{TRUE} or \code{FALSE})?}
}
\value{
An S3 object of class \code{sbm_network}. For details see
\link{new_sbm_network} section "Class structure."
}
\description{
Choose and load best model state from agglomerative collapsing algorithm
}
\examples{
set.seed(42)

# Start with a random network of two blocks with 25 nodes each
net <- sim_basic_block_network(n_blocks = 3, n_nodes_per_block = 25) \%>\%
  collapse_blocks(sigma = 2)

# Choose best result with default heuristic
net <- choose_best_collapse_state(net, verbose = TRUE)

# Score heuristic that fits a nonlinear model to observed values and chooses by largest negative residual
nls_score <- function(e, k){
  entropy_model <- nls(e ~ a + b * log(k), start = list(a = max(e), b = -25))
  -residuals(entropy_model)
}

# Choose result using custom heuristic function
my_sbm <- choose_best_collapse_state(net,
                                     heuristic = nls_score,
                                     verbose = TRUE)

}
\seealso{
visualize_collapse_results

Other modeling: 
\code{\link{collapse_blocks}()},
\code{\link{collapse_run}()},
\code{\link{get_block_edge_counts}()},
\code{\link{get_entropy}()},
\code{\link{get_num_blocks}()},
\code{\link{get_state}()},
\code{\link{mcmc_sweep}()}
}
\concept{modeling}
