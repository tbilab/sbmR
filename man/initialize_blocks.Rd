% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize_blocks.R
\name{initialize_blocks}
\alias{initialize_blocks}
\title{Assign blocks for all nodes}
\usage{
initialize_blocks(sbm, num_blocks = NULL, level = 0)
}
\arguments{
\item{sbm}{\code{sbm_network} object as created by
\code{\link{new_sbm_network()}}.}

\item{num_blocks}{Total number of blocks to initialize for each unique node
type. If set to \code{-1}, then a single block is made for every node.}

\item{level}{Level of child node. This will almost always stay at default
value of \code{0}.}
}
\value{
An S3 object of class \code{sbm_network}. For details see
\link{new_sbm_network} section "Class structure."
}
\description{
Initializes blocks for a given level of network. When \code{num_blocks = -1} (the
default) this will simply give every node its own block. Otherwise it will
randomly draw each nodes block from \code{num_block} possible parent nodes for
each node type. E.g. if network is bipartite and \code{num_blocks == 3} a total of
\code{3*2 = 6} blocks will be added and assigned randomly to nodes. Because of
random assignment of parents there may sometimes be less blocks than
\verb{num_blocks * <num_types>} due to some block nodes never being assigned to a
child node.
}
\examples{

# Small edge list to build network
edges <- dplyr::tribble(
  ~from, ~to,
  "a1"   , "b1"   ,
  "a1"   , "b2"   ,
  "a1"   , "b3"   ,
  "a2"   , "b1"   ,
  "a2"   , "b4"   ,
  "a3"   , "b1"
)

# A small simulated network
net <- new_sbm_network(edges)

# Default values of function will give every node its own block
net \%>\%
  initialize_blocks() \%>\%
  get_num_blocks()

# You can also decide to have a given number of blocks randomly assigned Here
# four blocks result because two random blocks are made for each of the two
# types
net \%>\%
  initialize_blocks(num_blocks = 2) \%>\%
  get_num_blocks()

# If you have a polypartite network each set of node types will get their own
# set of `num_blocks` randomly assigned
new_sbm_network(edges, bipartite_edges = TRUE) \%>\%
  initialize_blocks(num_blocks = 2) \%>\%
  get_num_blocks()


}
\seealso{
Other advanced: 
\code{\link{add_edge}()},
\code{\link{add_node}()},
\code{\link{get_node_to_block_edge_counts}()},
\code{\link{set_node_parent}()},
\code{\link{update_state}()}
}
\concept{advanced}
