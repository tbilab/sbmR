% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse_run.R
\name{collapse_run}
\alias{collapse_run}
\title{Run Agglomerative Merging to target a range of block numbers}
\usage{
collapse_run(
  sbm,
  num_final_blocks = 1:10,
  num_mcmc_sweeps = 10,
  sigma = 2,
  eps = 0.1,
  num_block_proposals = 5,
  parallel = FALSE
)
}
\arguments{
\item{sbm}{\code{sbm_network} object as created by
\code{\link{new_sbm_network}}.}

\item{num_final_blocks}{Array of integers corresponding to number of blocks to check in run.}

\item{num_mcmc_sweeps}{How many MCMC sweeps the model does at each
agglomerative merge step. This allows the model to allow nodes to find
their most natural resting place in a given collapsed state. Larger values
will slow down runtime but can potentially lead for more stable results.}

\item{sigma}{Controls the rate of collapse. At each step of the collapsing
the model will try and remove \code{current_num_nodes(1 - 1/sigma)} nodes from
the model. So a larger sigma means a faster collapse rate.}

\item{eps}{Controls randomness of move proposals. Effects both the block
merging and mcmc sweeps.}

\item{num_block_proposals}{Controls how many merger proposals are drawn for
each block in the model. A larger number will increase the exploration of
merge potentials but may lead the model to local minimums. If the number of
proposals is greater than then number of blocks then all blocks are
searched exhaustively.}

\item{parallel}{Run in parallel using \code{furrr}?}
}
\value{
An S3 object of class \code{sbm_network}. For details see
\code{\link{new_sbm_network}} section "Class structure."
}
\description{
Run Agglomerative Merging to target a range of block numbers
}
\examples{

set.seed(42)

# Start with a random network of two blocks with 25 nodes each
net <- sim_basic_block_network(n_blocks = 3, n_nodes_per_block = 25) \%>\%
  collapse_run(num_final_blocks = 1:5, sigma = 1.5)

# Collapse runs can be done in parallel
\dontrun{
  net <- sim_basic_block_network(n_blocks = 3, n_nodes_per_block = 25) \%>\%
    collapse_run(num_final_blocks = 1:5, sigma = 1.5, parallel = TRUE)
}

# We can look directly at the collapse results
net \%>\% get_collapse_results()

# We can visualize the collapse results
net \%>\% visualize_collapse_results()

# We can choose best result with default heuristic
net <- choose_best_collapse_state(net, verbose = TRUE, use_entropy = TRUE)

}
\seealso{
Other modeling: 
\code{\link{choose_best_collapse_state}()},
\code{\link{collapse_blocks}()},
\code{\link{entropy}()},
\code{\link{interblock_edge_counts}()},
\code{\link{mcmc_sweep}()},
\code{\link{n_blocks}()},
\code{\link{state}()}
}
\concept{modeling}
